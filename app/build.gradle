apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//Apply Safe Args Plugin
apply plugin: 'androidx.navigation.safeargs'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.caldeirasoft.basicapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.versionCodeMobile
        versionName rootProject.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        pickFirst 'META-INF/*'
    }
}

androidExtensions {
    experimental = true // Parcelize support
}

kapt {
    correctErrorTypes = true // Epoxy model support
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Local project
    implementation project(path: ':roundbutton')
    implementation project(path: ':domain')
    implementation project(path: ':data')
    implementation project(path: ':service')
    // Android
    implementation deps.support.core
    implementation deps.support.core_ktx
    implementation deps.support.appcompat
    implementation deps.support.constraintlayout
    implementation deps.support.palette
    implementation deps.support.material
    implementation deps.support.media
    implementation deps.support.swiperefeshlayout
    // Kotlin
    implementation deps.kotlin.stdlib
    implementation deps.kotlin.reflect
    implementation deps.kotlin.coroutines
    // Android-Room
    implementation deps.room.runtime
    implementation deps.room.ktx
    kapt deps.room.compiler
    // Android-Paging
    implementation deps.paging.runtime
    // Android-LiveData
    implementation deps.lifecycle.extensions
    kapt deps.lifecycle.compiler
    // Android-Navigation
    implementation deps.navigation.fragment
    implementation deps.navigation.ui
    // Circular progressbar
    implementation deps.circularprogressbar
    // Epoxy
    implementation deps.epoxy.runtime
    implementation deps.epoxy.databinding
    implementation deps.epoxy.paging
    kapt deps.epoxy.processor
    // Internationalisation
    implementation deps.i18n
    // Koin
    implementation deps.koin.runtime
    implementation deps.koin.viewmodel
    // Kotlin XML databinding DSL
    implementation deps.xmlbind
    // KotPref
    implementation deps.kotpref.runtime
    implementation deps.kotpref.enum
    // OkHttp
    implementation deps.okhttp.runtime
    implementation deps.okhttp.dns
    implementation deps.okhttp.logging
    // Picasso
    implementation deps.picasso.runtime
    implementation deps.picasso.blur
    // Retrofit
    implementation deps.retrofit.runtime
    implementation deps.retrofit.converter_moshi
    implementation deps.retrofit.converter_scalar
    implementation deps.retrofit.converter_xml
    // RoundedImageView
    implementation deps.roundedimageview
    // Shimmer
    implementation deps.shimmerlayout
    // SuperBottomSheet
    // implementation deps.superbottomsheet
    // ThreeTenABP (Java Time)
    implementation deps.threeten
    // Android debug database
    debugImplementation "com.amitshekhar.android:debug-db:1.0.3"
    // JUnit
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

def createSyncAdapterRes(variant) {
    print variant.applicationId
    variant.resValue "string", "package_name", variant.applicationId
    variant.resValue "string", "account_type", variant.applicationId
    variant.resValue "string", "content_authority", "${variant.applicationId}.sync.provider"
}

afterEvaluate {
    android.applicationVariants.all { variant ->
        createSyncAdapterRes(variant)
    }
}